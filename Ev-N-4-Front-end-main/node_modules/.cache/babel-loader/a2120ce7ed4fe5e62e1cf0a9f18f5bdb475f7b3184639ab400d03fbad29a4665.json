{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Ev-N-4-Front-end-main\\\\Ev-N-4-Front-end-main\\\\src\\\\components\\\\Lista.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './lista.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lista = () => {\n  _s();\n  const [contactos, setContactos] = useState([]);\n  const [filtro, setFiltro] = useState('');\n  const [contactosFiltrados, setContactosFiltrados] = useState([]);\n  useEffect(() => {\n    // Obtener los contactos almacenados en el localStorage\n    const contactosLocalStorage = localStorage.getItem('contactos');\n    if (contactosLocalStorage) {\n      try {\n        const parsedContactos = JSON.parse(contactosLocalStorage);\n        setContactos(parsedContactos);\n        setContactosFiltrados(parsedContactos); // Inicializa los contactos filtrados\n      } catch (error) {\n        console.error('Error al parsear los contactos del localStorage:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    // Filtra los contactos cada vez que el filtro cambia\n    const resultados = contactos.filter(contacto => contacto.name.toLowerCase().includes(filtro.toLowerCase()) || contacto.email.toLowerCase().includes(filtro.toLowerCase()) || contacto.phone.includes(filtro));\n    setContactosFiltrados(resultados);\n  }, [filtro, contactos]);\n  const eliminarContacto = index => {\n    const contactosActualizados = [...contactos];\n    contactosActualizados.splice(index, 1);\n    setContactos(contactosActualizados);\n    setContactosFiltrados(contactosActualizados); // Actualizar la lista filtrada\n    localStorage.setItem('contactos', JSON.stringify(contactosActualizados));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todos los Contactos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Buscar por nombre, correo o tel\\xE9fono...\",\n      value: filtro,\n      onChange: e => setFiltro(e.target.value),\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), contactosFiltrados.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay contactos que coincidan con tu b\\xFAsqueda.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: contactosFiltrados.map((contacto, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"my-3 mx-2 custom-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: contacto.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Correo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), \" \", contacto.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tel\\xE9fono:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), \" \", contacto.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => eliminarContacto(index),\n              className: \"delete-button\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Lista, \"fWxqA3uTm1cTumLSEU7Z4/Xu9aA=\");\n_c = Lista;\nexport default Lista;\nvar _c;\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Row","Col","Form","FontAwesomeIcon","faTrash","jsxDEV","_jsxDEV","Lista","_s","contactos","setContactos","filtro","setFiltro","contactosFiltrados","setContactosFiltrados","contactosLocalStorage","localStorage","getItem","parsedContactos","JSON","parse","error","console","resultados","filter","contacto","name","toLowerCase","includes","email","phone","eliminarContacto","index","contactosActualizados","splice","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","length","map","xs","sm","md","Body","Title","Text","variant","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Ev-N-4-Front-end-main/Ev-N-4-Front-end-main/src/components/Lista.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './lista.css';\r\n\r\nconst Lista = () => {\r\n  const [contactos, setContactos] = useState([]);\r\n  const [filtro, setFiltro] = useState('');\r\n  const [contactosFiltrados, setContactosFiltrados] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Obtener los contactos almacenados en el localStorage\r\n    const contactosLocalStorage = localStorage.getItem('contactos');\r\n    if (contactosLocalStorage) {\r\n      try {\r\n        const parsedContactos = JSON.parse(contactosLocalStorage);\r\n        setContactos(parsedContactos);\r\n        setContactosFiltrados(parsedContactos); // Inicializa los contactos filtrados\r\n      } catch (error) {\r\n        console.error('Error al parsear los contactos del localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filtra los contactos cada vez que el filtro cambia\r\n    const resultados = contactos.filter(contacto =>\r\n      contacto.name.toLowerCase().includes(filtro.toLowerCase()) ||\r\n      contacto.email.toLowerCase().includes(filtro.toLowerCase()) ||\r\n      contacto.phone.includes(filtro)\r\n    );\r\n    setContactosFiltrados(resultados);\r\n  }, [filtro, contactos]);\r\n\r\n  const eliminarContacto = (index) => {\r\n    const contactosActualizados = [...contactos];\r\n    contactosActualizados.splice(index, 1);\r\n    setContactos(contactosActualizados);\r\n    setContactosFiltrados(contactosActualizados); // Actualizar la lista filtrada\r\n    localStorage.setItem('contactos', JSON.stringify(contactosActualizados));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Todos los Contactos:</h2>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Buscar por nombre, correo o teléfono...\"\r\n        value={filtro}\r\n        onChange={e => setFiltro(e.target.value)}\r\n        className=\"mb-4\"\r\n      />\r\n      {contactosFiltrados.length === 0 ? (\r\n        <p>No hay contactos que coincidan con tu búsqueda.</p>\r\n      ) : (\r\n        <Row>\r\n          {contactosFiltrados.map((contacto, index) => (\r\n            <Col key={index} xs={12} sm={6} md={4} className=\"mb-4\">\r\n              <Card className=\"my-3 mx-2 custom-card\">\r\n                <Card.Body>\r\n                  <Card.Title>{contacto.name}</Card.Title>\r\n                  <Card.Text>\r\n                    <strong>Correo:</strong> {contacto.email}<br />\r\n                    <strong>Teléfono:</strong> {contacto.phone}\r\n                  </Card.Text>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => eliminarContacto(index)}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lista;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}